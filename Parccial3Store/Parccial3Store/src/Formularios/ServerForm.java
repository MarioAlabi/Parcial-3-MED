/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Formularios;

import Clases.BlockChain;
import Clases.Block;
import java.io.IOException;
import java.io.InputStream;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.InetSocketAddress;
import java.net.ServerSocket;
import java.net.Socket;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.SwingUtilities;

/**
 *
 * @author ademi
 */
public class ServerForm extends javax.swing.JFrame implements Runnable {
    private Thread tListener;
    private ServerSocket svrSocket;
    private BlockChain bc;
    private String nombreServer, ipA;
    private int socket;

    public ServerForm(String nombreServer, String ip, int socket) {
        initComponents();
        this.nombreServer = nombreServer;
        this.ipA = ip;
        this.socket = socket;
        this.jLabel1.setText(nombreServer);
        this.jLabel2.setText(ip);
        this.jLabel3.setText(Integer.toString(socket));
        this.bc = new BlockChain(2, "0"); // Inicializar BlockChain con complejidad de 2
        this.startServer();
    }

    private void startServer() {
        try {
            InetAddress ipAddress = InetAddress.getByName(ipA);
            InetSocketAddress sNetServer = new InetSocketAddress(ipAddress, socket);
            svrSocket = new ServerSocket();
            svrSocket.bind(sNetServer);
            tListener = new Thread(this);
            tListener.start();
            System.out.println("Server started on port " + socket);
        } catch (Exception e) {
            e.printStackTrace();
        }
    }

     @Override
    public void run() {
        while (true) {
            try {
                System.out.println("Server is running and waiting for clients...");
                Socket socket = svrSocket.accept();
                System.out.println("Client connected.");
                ObjectInputStream ois = new ObjectInputStream(socket.getInputStream());
                String[] userParams = (String[]) ois.readObject();
                String userName = userParams[0];
                System.out.println("Received user details: " + userName);
                double initialBalance = 0;
                BlockChain userBlockChain = this.bc;

                // Crear el FormWallet en el EDT
                SwingUtilities.invokeLater(() -> {
                    System.out.println("Creating and showing FormWallet for: " + userName);
                    FormWallet walletForm = new FormWallet(userName, initialBalance, userBlockChain);
                    walletForm.setVisible(true);
                    System.out.println("FormWallet created and shown for user: " + userName);
                });

                socket.close();
            } catch (IOException e) {
                e.printStackTrace();
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(ServerForm.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jTextField1 = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("Nombre Server:");

        jLabel2.setText("Ip:");

        jLabel3.setText("Socket:");

        jButton1.setText("Listar Balance");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Mostrar Transacciones");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane1.setViewportView(jTextArea1);

        jTextField1.setText("jTextField1");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(22, 22, 22)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton1))
                        .addGap(26, 26, 26)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(11, 11, 11)
                                        .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(64, 64, 64)
                                        .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addComponent(jButton2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(39, 39, 39)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 360, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(34, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(29, 29, 29)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLabel3))
                .addGap(30, 30, 30)
                .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton1)
                    .addComponent(jButton2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 32, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(70, 70, 70))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       this.listBalances();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
       String sCad="";
       for(int i=1; i<this.bc.size(); i++){
            sCad += "Block" + this.bc.getBlock(i).getId+ ". "+
                     this.bc.transactionReport(this.bc.getBlock(i).getId()) + "-----------";
            
        
        }
       this.jTextArea1.setText(sCad);
    }//GEN-LAST:event_jButton2ActionPerformed
      

   public void listBalances() {
        // Implementar la lÃ³gica para listar los balances
    }

    public void showTransactions() {
        String sCad = "";
        for (int i = 1; i < bc.size(); i++) {
            sCad += "Block " + bc.getBlock(i).getId() + ". " +
                    bc.transactionReport(bc.getBlock(i).getId()) + "-----------";
        }
        jTextArea1.setText(sCad);
    }

    public void setBlockChaininCopy(BlockChain copyBlockChain) {
        this.bc = copyBlockChain;
    }

    public BlockChain getBlockChainCopy() {
        return this.bc;
    }
     public int getBlockChainSize() {
        return this.bc.size();
    }

    public void startClientAccount(String nodeName, double initialBalance) {
    Block newBlock = this.bc.createBlock();
    
    this.bc.mineBlock(newBlock);
    }

    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ServerForm("ServerName", "192.168.56.2", 8000).setVisible(true);
            }
        });
    }
    
        /**
     * @param args the command line arguments
     */
   
   

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextField jTextField1;
    // End of variables declaration//GEN-END:variables
}
